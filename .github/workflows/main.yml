name: CI-CD-Pipeline-to-AWS-Beanstalk
run-name: ${{ github.actor }} is learning GitHub Actions

env:
  EB_PACKAGE_S3_BACKET_NAME : "andr-flask-application-packages"
  EB_APPLICATION_NAME       : "GIT_deploy"
  EB_ENVIRONMENT_NAME       : "GITdeploy-env"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "eu-central-1"
  
on:
  push:
    branches: 
      - master
   
jobs:
  my-ci-parts:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone our repo
        uses: actions/checkout@v1

      - name: Create zip deployment package      
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
  
      - name: Configure my AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_SECRET_ACCESS_KEY }}
          aws-region           : ${{ env.AWS_REGION_NAME }}

      - name: Copy deployment package to s3 backet
        run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BACKET_NAME }}

      - name: Print message for CI finish
        run: echo "CI Pipeline part Finished successfully!!!"

  my-cd-parts:
    runs-on: ubuntu-latest 
    needs: [my-ci-parts]

    steps:
      - name: Configure my AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_SECRET_ACCESS_KEY }}
          aws-region           : ${{ env.AWS_REGION_NAME }}

      - name: Create new Elastic Beanstalk Application
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BACKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
        
      - name: Deploy new Elastic Beanstalk Application version
        run:  aws elasticbeanstalk update-environment ${{ env.EB_ENVIRONMENT_NAME }} --version-label
      
      - name: Print message for CD finish
        run: echo "CD Pipeline part Finished successfully!!!"
